< technical scrum master profile  > - TRANSPARENCY.
1. Check the code commits and approvals on a frequent basis.
2. Educate / make aware of the TEAM PROFILE < technical & process >
              technical tasks time : < average >
3. My role is to bring everybody to the table for discussion.

< Note: >
1. No micromanaging

[ QUESTIONS and ANSWERS ]
-------------------------
1. Continuous Failing Delivery timelines (sprint goal ): How can i solve this ?

New Scrum ?
Existing SM ?
     
	 - Get the info from Retrospectives
	 - do a detailed retrospective
	        - identify the capacity - velocity data
			- identify the team profile .
					- change mind set of Agile team
					- explain the difference between normal team and agile team
			- stakeholder pressures
	 - See if you can plan for hot fixes after you identify the root cause.
	   
2. PO interveneing by assigning tasks
	- tell him that it affects the spring goal.
	- it should be taken in the next sprint. if not, 
	  replace an existing task to balance the spring goal/capacity.
	  < importantly > is the current team has the necessary profile/organised.
	- normally a scrum team is small and its a planned work. 
	  but in SAFE environment, it can be managed with other team members.
	  
	  
3. Scrum master profile is not a savior profile, its more than that.
   SM should empathise the whole team for better results.
   It should be a collaborative team.
   
4. conflict ?
       - availability of the team.
	   - bring the managemnt policy ( particularly the leave /absence policy)perspective.
               : bring change in working agreements 
                            - replacement guy on case of leave for temporary support.
							- try to inform in advance.
							- co-working arragements.
							

5. Adamant PO on completing task.

6. Architect alignmnet  in PI planning
		- bringing the team at same page , balancing the tech level understanding.
		
7. Team member non-belief on scrum
        - share the impact of his behavior.
		
8. DOD and DOR
         < SAFE > - DOR : balance the DoR at team level and feature level 
		 < SCRUM > - DOD : PO and SM alignment is enough < quality mesure >
		 
9. Daily routine of SM.
         - reflects the health of the team which is directly related SM effectiveness.
		 - more than the ADO updates,
			- One On One meeting with a team once in an iteration / sprint
			- multiteam environmnet updates.
			               : WG and AF-sales.



[ C# Questions ]

https://www.youtube.com/watch?v=BKynEBPqiIM&list=PLQMqUlV2_B8ngL_PaT9UFsd0-PvnrpZGC

CLI - Common language Interface
CLR - comman language Runtime.
CTS - Common Type System
CLS - Common Language system.

1. difference between .NET and C    
    < .NET is a framwork. eg: using system.collections>

2. Differencebetween .NET framework / core.
	< .Net framework is windows, .NET core is cross platform >.
	<  CLI in core >                   
	<  packaging using Nuget >
	<  CLR for garbage collection >

3. Managed code /unmanged code
    < Managed code - when under CLR management >
	< Unmanaged code - which runs outsiode the CLR Management : eg, a message box display while executing a program - comes from windows32 DLL which is impoeted >

4. Explain the imporatance of garbage collector.
	< runs in th background which claims/cleans any " UNUSED MANAGED " resources >
	< when you instantiate a method to create  a customer object , and check the pefoemance tab, you will see "GC count" increasing during the object creation.
	
5. Can A garbage collector clain UNMANAGED resourcces?
    <No, it cannot clean resources created outside CLR runtime >
	
6. Importance of CTS?
	< CTS ensures that data types different in 2 different languages get compiled to a common data type >
	
7. importance of CLS?
    < CLS ensures that the data type having custom behavior < eg, case sensitivity, Pointer usage > is managed.

8. Boxing and Unboxing
	< moving value type to a REFERENCE is boxing >
	< moving REFERNCE to value is un-boxing >
	
9. Casting   < Type casting >
		- implict casting    < lower to higher datatype > 
		- explicit Casting   < higher to lower datatype >
		
10. Array and Array list
    < array - fixed length size and its Strongly TYPEd as INT >
	< Arraylist is like  a general LIST function which can be expanded . so the size id flewxible and its not strongly typed >
	
11. Generic Collections
	< LIST - whcib is Strongly typed but flexoible in size >.
	
12. What are threads in C-Sharp.
    < exeute code parallely >

       
13. What is the difference between Threading and TPL (Task parallel library )?
	< in fact talking about benefits of TASK is better 
		1. Pooling threads
		2. Parallel processing
		3. Plus ( return, result, cancel, chain, Await Async )
	>

14. Exceptions handling
    < TRy catch blocks >

15 what is Finally block 
	< excuite a block of code irrespective of EXCEPTION block >
	
16. When is OUT keyword used ?
	< multiple Values returned from a function >
	
17. WHat are events ?
	< events are encapsulations over delegates >
	< Even actually chnage the delete to PUBLISER SUBSCRIBWER model >

18. what is the need for  delegate
	< delegates is a pointer to a function and very usefull as callbacks to commnicate between threads > 

19. Differnce between Abstarct class and Interface.
	< abstarct is a half defined parent class , which is an INHERITANCE >
	< INterface is Contract , forces a stucture into a class.>


[ MVC Questions ]
	
1. purpose of wwwrooot folder.
	store static contents like CSS, HTML, JS, images.
	
2. importance of Appsettings.json file.
	< helps to store cofiguration data : eg, connection  strings, Admmin strings as a KEY-VALUE pair>
	< in order to read the appsettings.json file, we need to use iConfiguration interface >
		< the output is a string from KEY-VALUE pair. >
		
3. explain dependecny injection.
	< practise of providing dependecy objects from outside as a property,
	instead in class creating using new keyword >
	< benefit is that you are creating a more decoupled system >
	
4. What is middleware.
	middle ware helps to execute preprocessing logic before controller is executed.
	
5. Razor ?
	< Razzor is a view engine in whcih we can write HTML, C#/VB.Net code together >
	
6. what is viewModel ?
     cant use 2 models at the same time . so we create a view model.
	 view models is a wrapper class over multipl models and it represents data what your view needs.
	

https://www.youtube.com/watch?v=-jeoyDJDsSM&list=PLQMqUlV2_B8ngL_PaT9UFsd0-PvnrpZGC&index=7

	
1. Angular
	< it is a javascript binding framework (VM) which binds the HTML UI with Javascript model >
	
2. Directive
	< angular syntaxes in HTML code >
	
3. Differer=nt types of Directives in Angular
	1. structural : change the DOM layout by adding or removing element. 
	2. Attribute  : change the appearance of HTML behavior
	3. component  : Directives with templates - its  like user control.
	
4. NPM 
	< node package manager >
	< helps to install any Javascript framework  in your computer >
	< node modules is the folder where all the packages are installed >

5. Typescrpt
	superset of Javascript
	it extends javascript by adding types .
	it gives nice OOP environment.
	 
             